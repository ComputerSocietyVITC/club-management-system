generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  regNo     String    @unique
  userName  String    @unique
  contactNo Int       @unique
  role      String
  tasks     Tasks[]
  WorksOn   WorksOn[]
  Attends   Attends[]
}

model Tasks {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  description String    @unique
  contactNo   Int       @unique
  created_by  Users     @relation(fields: [UsersId], references: [id])
  UsersId     String
  assignedTo  Projects  @relation(fields: [projectID], references: [id])
  projectID   String
  WorksOn     WorksOn[]
}

model Projects {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @unique
  status    String
  contactNo Int      @unique
  role      String
  Tasks     Tasks[]
}

model Events {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    @unique
  startsAt  DateTime
  venue     String
  Attends   Attends[]
}

model WorksOn {
  user      Users    @relation(fields: [userID], references: [id])
  userID    String
  task      Tasks    @relation(fields: [taskID], references: [id])
  taskID    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userID, taskID])
}

model Attends {
  user      Users    @relation(fields: [userID], references: [id])
  userID    String
  event     Events   @relation(fields: [eventID], references: [id])
  eventID   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  taskID    String

  @@id([eventID, taskID])
}
